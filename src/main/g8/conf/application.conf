# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~
# Play uses HOCON as its configuration file format.  HOCON has a number
# of advantages over other config formats, but there are two things that
# can be used when modifying settings.
#
# You can include other configuration files in this main application.conf file:
#include "extra-config.conf"
#
# You can declare variables and substitute for them:
#mykey = \${some.value}
#
# And if an environment variable exists when there is no other subsitution, then
# HOCON will fall back to substituting environment variable:
#mykey = \${JAVA_HOME}

## Application name and version
app {
    version   = "$version$"
    name      = "$name$"
    shortname = "$short_name$"
    fullname  = \${app.name} \${app.version}
    desc      = "$desc$"
}

## Spring's beans configuration file (relative with application's home directory)
spring.conf = "conf/spring/beans.xml"

## Secret key
# https://www.playframework.com/documentation/2.7.x/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookies and CSRF tokens, and built-in encryption utilities
# This should be changed for production: generate new crypto create with command `playGenerateSecret`
play.http.secret.key = "$play_crypto_secret;format="random"$"

## Custom error pages
# https://www.playframework.com/documentation/2.7.x/JavaErrorHandling
play.http.errorHandler = "errors.ErrorHandler"

## Static assets settings
# https://www.playframework.com/documentation/2.7.x/AssetsOverview#Using-assets-with-configuration
play.assets {
    path = "/public"
    urlPrefix = "/assets"
}

## Internationalization
# https://www.playframework.com/documentation/2.7.x/JavaI18N
play.i18n.langs = [ "en", "vi" ]

## Post size limit
# https://www.playframework.com/documentation/2.7.x/JavaBodyParsers
play.http.parser.maxMemoryBuffer = 64K
play.http.parser.maxDiskBuffer = 128M

## Bootstrap actors
# Bootstrap actors are created and initialized during application's startup.
bootstrap-actors = [
    #<fully-qualified-class-name1, must be an actor class>[;actor-name1]
    #<fully-qualified-class-name2, must be an actor class>[;actor-name2]
    #...
]

## Module settings
include "conf.d/module.conf"

## API settings
include "conf.d/api.conf"

## Akka settings
include "conf.d/akka.conf"

## Akka HTTP settings
include "conf.d/akka_http.conf"

## WS settings
include "conf.d/ws.conf"

## Filter settings
include "conf.d/filters.conf"

## Custom error pages
include "conf.d/error.conf"

## Settings for Sample/Scaffolding
include "samples.d/samples.conf"
